"""Implement schema changes

Revision ID: abb754e0190e
Revises: 978891a5b894
Create Date: 2025-08-22 11:41:37.120446

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'abb754e0190e'
down_revision: Union[str, Sequence[str], None] = '978891a5b894'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('dish_types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('ingredients', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('ingredients', 'quantity',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('ingredients', 'unit',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('ingredients', 'recipe_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('ingredients_recipe_id_fkey', 'ingredients', type_='foreignkey')
    op.create_foreign_key(None, 'ingredients', 'recipes', ['recipe_id'], ['id'], ondelete='CASCADE')
    
    op.drop_constraint('recipe_tags_tag_id_fkey', 'recipe_tags', type_='foreignkey')
    op.drop_constraint('tags_pkey', 'tags', type_='primary')
    op.add_column('tags', sa.Column('tag', sa.String(), nullable=False))
    op.create_primary_key('pk_tags', 'tags', ['tag'])
    op.drop_index('ix_tags_id', table_name='tags')
    op.drop_index('ix_tags_name', table_name='tags')
    op.create_index(op.f('ix_tags_tag'), 'tags', ['tag'], unique=True)
    op.drop_column('tags', 'name')
    op.drop_column('tags', 'id')

    op.add_column('recipe_tags', sa.Column('tag', sa.String(), nullable=False))
    op.alter_column('recipe_tags', 'recipe_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('recipe_tags_recipe_id_fkey', 'recipe_tags', type_='foreignkey')
    op.create_foreign_key(None, 'recipe_tags', 'recipes', ['recipe_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'recipe_tags', 'tags', ['tag'], ['tag'], ondelete='CASCADE')
    op.drop_column('recipe_tags', 'tag_id')

    op.alter_column('recipes', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('recipes', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('recipes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('recipes', 'dish_type_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tags', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tags_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.add_column('tags', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_tags_tag'), table_name='tags')
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.drop_column('tags', 'tag')
    op.alter_column('recipes', 'dish_type_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('recipes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('recipes', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('recipes', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('recipe_tags', sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'recipe_tags', type_='foreignkey')
    op.drop_constraint(None, 'recipe_tags', type_='foreignkey')
    op.create_foreign_key(op.f('recipe_tags_tag_id_fkey'), 'recipe_tags', 'tags', ['tag_id'], ['id'])
    op.create_foreign_key(op.f('recipe_tags_recipe_id_fkey'), 'recipe_tags', 'recipes', ['recipe_id'], ['id'])
    op.alter_column('recipe_tags', 'recipe_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('recipe_tags', 'tag')
    op.drop_constraint(None, 'ingredients', type_='foreignkey')
    op.create_foreign_key(op.f('ingredients_recipe_id_fkey'), 'ingredients', 'recipes', ['recipe_id'], ['id'])
    op.alter_column('ingredients', 'recipe_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ingredients', 'unit',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('ingredients', 'quantity',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('ingredients', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('dish_types', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
